主题MOO：尝试理解讲座的这些部分；可能会有与之相关的简短问题来测试你的总体理解。
- 数学编程公式和问题难度：能够制定带有决策变量的优化问题，并使用我们在讲座和练习中使用和讨论的技术；以图形方式解决线性编程任务；了解主动约束、最小化器、冲突目标等术语。对数学程序设计模型进行分类
- 秩序和帕累托支配 了解不同类型秩序的公理和几何定义以及秩序的属性；了解帕累托支配秩序和弱成分秩序；哈斯图；秩序扩展；和最小元素。多面体圆锥体方程。
- 景观分析。掌握如何根据水平曲线（等值线）识别有效点；了解弱支配解；知道如何将帕累托前沿形状分为凹形、凸形等。
- 最优条件。了解简单分析函数的偏导数和计算方法；了解梯度和二阶导数（Hessian矩阵）以及如何计算和检查无约束问题的最优性；知道Lagrange乘数定理和规则；以及如何用它来解决有质量约束的问题；知道如何检查一个点是否满足KKT条件；了解KKT条件中不同部分的含义；知道Fritz John条件；特别是在双目标无约束情况下。
- 单点方法。理解讲座中讨论的单点方法（也可参见辅导文章），并知道其局限性。Epsilon约束法。线性加权的劣势。
- 基于人口的方法。知道(𝜇+𝜆)进化算法的一般伪码，知道二维超体积指标，非主导/拥挤-距离/超体积-贡献。
- 贝叶斯多目标优化。了解如何使用线性预测器进行预测，以及如何计算简单克里格法的线性预测器的权重（lambda值）。了解什么是预期改进（超容积），以及它的两个单调性属性是什么；知道贝叶斯全局优化的基本循环。
- MCDA。了解先验法、后验法和渐进法之间的区别，什么是冷漠曲线，知道Derringer Suich和Harrington可取性函数之间的区别，稳健序数回归的LP表述。
- 爬坡法。理解模拟退火的伪代码，了解如何计算基于梯度和牛顿-拉斐尔森方法的搜索方向。理解集合规模化的思想，记忆算法，单点方法，以使用Hillclimbing进行Pareto front的逼近。
- 设计优化：了解形状参数化的不同想法。什么意味着创新。

通过www.DeepL.com/Translator（免费版）翻译